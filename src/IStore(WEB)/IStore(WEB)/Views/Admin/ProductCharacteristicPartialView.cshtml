@model IEnumerable<Domain.EF_Models.GroupCharacteristic>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<script>

    $(function () {

        $('html').on('click', '.addBtn', function () {

            $(this).parent().find(".cont").append($(".innerBox").last().clone());
            $(this).parent().find(".cont").find(".innerBox").last().children().eq(1).val("");
            $(this).parent().find(".cont").find(".innerBox").last().children().eq(4).val("");

        });

         $('.addGroup').on('click', function () {

             $("tbody").append($(".tableBox").last().clone());
             $(".tableBox").last().find("td").find(".innerBox:not(:first)").remove();
             $(".tableBox").last().find("td").find("input").val(" ");
             $(".tableBox").last().find('td').find(".idgroup").text("");
         });

        $('.saveBtn').on('click', function () {

            var groups = [];

            var elements = $(".tableBox");

            $(elements).each(function (){

                var characteristics = [];

                $(this).find(".innerBox").each(function () {
                    characteristics.push($(this).find(".title").val(), $(this).find(".value").val());
                });

                groups.push($(this).find('td').find(".idgroup").text().replace(/\n/ig, '').trim(), $(this).find('td').find(".group").val(), characteristics);
            });
            var d = groups;

            $('html').text(groups);
        });


    });

</script>





<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                Characteristics
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {

            <tr class="tableBox">
                <td>
                    <div class="idgroup">
                        @Html.DisplayFor(modelItem => item.Id)
                    </div>
                </td>

                <td>
                    @Html.EditorFor(modelItem => item.Title, new { htmlAttributes = new { @class = "group" } })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    <div class="box">
                        <div class="cont" style="background-color:red">
                            @foreach (var сharacteristic in item.Characteristics)
                            {
                                <div class="innerBox">
                                    @Html.Label("Title")
                                    @Html.EditorFor(modelItem => сharacteristic.Title, new { htmlAttributes = new { @class = "title" } })
                                    <label> </label>
                                    @Html.Label("Value")
                                    @Html.EditorFor(modelItem => сharacteristic.Value, new { htmlAttributes = new { @class = "value" } })
                                    <br>
                                </div>
                            }
                        </div>

                        <button class="addBtn">Add сharacteristic</button>
                    </div>
                </td>
            </tr>

        }

    </tbody>

</table>
<br>
<button class="addGroup">Add group</button>
<button class="saveBtn">Save</button>